spring:
  application:
    name: backend
  mvc:
    static-path-pattern: /static/**
  web:
    resources:
      add-mappings: false

  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  jpa:
    show-sql: ${SHOW_SQL}

jwt:
  access-expiration: ${ACCESS_EXPIRATION}
  refresh-expiration: ${REFRESH_EXPIRATION}
  secret-key: ${SECRET_KEY}

ai-server:
  uri: ${AI_SERVER_URI}
  path: ${AI_SERVER_PATH}

--- # 로컬 설정
spring:
  config:
    activate:
      on-profile: local

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${OAUTH_KAKAO_ID}
            client-secret: none
            client-name: kakao
            redirect-uri: ${LOCAL_OAUTH_KAKAO_REDIRECT}
            authorization-grant-type: authorization_code
            client-authentication-method: none
          naver:
            client-id: ${OAUTH_NAVER_ID}
            client-secret: ${OAUTH_NAVER_SECRET}
            client-name: naver
            redirect-uri: ${LOCAL_OAUTH_NAVER_REDIRECT}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic
          google:
            client-id: ${OAUTH_GOOGLE_ID}
            client-secret: ${OAUTH_GOOGLE_SECRET}
            client-name: google
            redirect-uri: ${LOCAL_OAUTH_GOOGLE_REDIRECT}
            scope:
              - email
              - profile

  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:test;MODE=MySQL
    username: sa
  h2:
    console:
      enabled: true
      path: /h2-console

  data:
    redis:
      host: ${LOCAL_REDIS_HOST}
      port: ${LOCAL_REDIS_PORT}
    mongodb:
      uri: ${LOCAL_MONGO_URI}

  jpa:
    hibernate:
      ddl-auto: ${LOCAL_DDL_AUTO}

callback: ${LOCAL_CALLBACK_URI}

logging:
  level:
    root: ${LOCAL_LOGGING_LEVEL}

--- # 개발 서버 설정
spring:
  config:
    activate:
      on-profile: dev

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${OAUTH_KAKAO_ID}
            client-secret: none
            client-name: kakao
            redirect-uri: ${OAUTH_KAKAO_REDIRECT}
            authorization-grant-type: authorization_code
            client-authentication-method: none
          naver:
            client-id: ${OAUTH_NAVER_ID}
            client-secret: ${OAUTH_NAVER_SECRET}
            client-name: naver
            redirect-uri: ${OAUTH_NAVER_REDIRECT}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic
          google:
            client-id: ${OAUTH_GOOGLE_ID}
            client-secret: ${OAUTH_GOOGLE_SECRET}
            client-name: google
            redirect-uri: ${OAUTH_GOOGLE_REDIRECT}
            scope:
              - email
              - profile

  datasource:
    driver-class-name: ${RDB_DRIVER}
    url: ${RDB_URL}
    username: ${RDB_USERNAME}
    password: ${RDB_PASSWORD}
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
    mongodb:
      uri: ${MONGO_URI}

  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO}

callback: ${CALLBACK_URI}

logging:
  level:
    root: ${LOGGING_LEVEL}
